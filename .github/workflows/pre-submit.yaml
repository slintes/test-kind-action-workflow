name: Pre Submit
on:
  push:
    branches:
      - main
      - release-*
  pull_request:
    branches:
      - main
      - release-*
      -
env:
  BUILD_SCRIPT: build-nhc-snr.sh
  IMAGE_REGISTRY: kind-registry:5000
  DEPLOY_NAMESPACE: k8s-test

jobs:
  all:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: Configure insecure registry
        run: |
          #sudo cat /etc/docker/daemon.json

          # allow insecure registry but keep original config!
          sudo bash -c "cat <<EOF >/etc/docker/daemon.json
          {
            \"exec-opts\": [\"native.cgroupdriver=cgroupfs\"],
            \"cgroup-parent\": \"/actions_job\",
            \"insecure-registries\" : [\"${IMAGE_REGISTRY}\"]
          }
          EOF"

          #sudo cat /etc/docker/daemon.json
          sudo systemctl restart docker

          # same for podman
          sudo bash -c "cat <<EOF >/etc/containers/registries.conf
          [[registry]]
          location=\"${IMAGE_REGISTRY}\"
          insecure=true
          EOF"
          #sudo cat /etc/containers/registries.conf

      - name: Start kind cluster
        uses: container-tools/kind-action@v2
        with:
          version: v0.17.0
          config: ./kind-config.yaml
          node_image: kindest/node:v1.24.7
          kubectl_version: v1.24.7
          registry: true

      - name: Cluster info
        run: |
          kubectl version -o=yaml
          kubectl cluster-info
          kubectl get nodes -o=wide
          
      - name: Install OLM
        run: |
          curl -sL https://github.com/operator-framework/operator-lifecycle-manager/releases/download/v0.22.0/install.sh | bash -s v0.22.0

      - name: Install NHC / SNR build script
        run: |
          curl https://raw.githubusercontent.com/medik8s/tools/main/scripts/${BUILD_SCRIPT} -o ${BUILD_SCRIPT}
          chmod +x ${BUILD_SCRIPT}

      - name: Build and deploy NHC + SNR
        run: |
          # set version vars
          VERSION=9.9.9-ci
          export NHC_VERSION=${VERSION}
          export SNR_VERSION=${VERSION}
          export INDEX_VERSION=${VERSION}

          # set deployment namespace
          export CATALOG_SOURCE_NAMESPACE=olm
          
          # build and push images, and deploy
          ./${BUILD_SCRIPT} --http
          
          # wait a bit for OLM creating CSV etc
          sleep 1m

      - name: OLM status
        if: ${{ always() }}
        run : |
          kubectl get -A OperatorGroup -o wide
          kubectl get -A CatalogSource -o wide
          kubectl get -A Subscription -o wide
          kubectl get -A ClusterServiceVersion -o wide
          kubectl get -A InstallPlan -o wide

      - name: Wait for deployments
        run: |
          # wait for deployment
          kubectl wait deployment -n ${DEPLOY_NAMESPACE} self-node-remediation-controller-manager --for condition=Available=True --timeout=180s
          # give SNR some time to create the DS
          sleep 30s
          kubectl rollout status daemonset -n ${DEPLOY_NAMESPACE} self-node-remediation-ds --timeout 180s
          kubectl wait deployment -n ${DEPLOY_NAMESPACE} node-healthcheck-controller-manager --for condition=Available=True --timeout=180s
          kubectl wait deployment -n ${DEPLOY_NAMESPACE} node-healthcheck-node-remediation-console-plugin --for condition=Available=True --timeout=300s

      - name: Debug console
        if: ${{ failure() }}
        run: |
          kubectl describe deployment -n ${DEPLOY_NAMESPACE} node-healthcheck-node-remediation-console-plugin
          kubectl describe pod -n ${DEPLOY_NAMESPACE} --selector="app.kubernetes.io/component=node-remediation-console-plugin"

      - name: Deployment status
        if: ${{ always() }}
        run : |
          kubectl -n ${DEPLOY_NAMESPACE} get deployments,daemonsets,pods -o=wide

      - name: Run NHC e2e
        run: |
          # this is where the script above checks out NHC
          cd nhc-tmp
          OPERATOR_NS=${DEPLOY_NAMESPACE} make test-e2e
